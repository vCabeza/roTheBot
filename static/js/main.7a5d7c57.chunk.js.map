{"version":3,"sources":["serviceWorker.js","components/ro/ChatCard.jsx","actions/index.js","actions/types.js","components/ro/Chat.jsx","components/App.js","reducers/botReducer.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","ChatCard","Card","className","style","width","height","Carousel","controls","this","props","cardList","map","card","index","Item","key","cardImg","Img","variant","src","Body","margin","heigth","Title","fontSize","cardTitle","Text","cardText","cardUrl","Button","href","cardButton","Component","sayHello","dispatch","answer","push","answers","find","id","type","payload","cleanChat","sendMessage","message","toUpperCase","indexOf","rand","Math","floor","random","initialMessages","Chat","scrollToBottom","messagesEnd","scrollIntoView","onChangeHandler","event","name","target","value","setState","e","preventDefault","state","CustomToggle","React","forwardRef","ref","children","onClick","Navbar","sticky","Brand","chatVisibilityHandler","Image","fluid","origin","alt","Collapse","Dropdown","alignRight","Toggle","as","Menu","bot","messages","isCard","sender","text","float","clear","el","Form","onSubmit","Row","Col","padding","xs","Control","placeholder","onChange","autoComplete","connect","actions","App","isChatHidden","chatClicked","bind","chat","initialState","combineReducers","action","console","log","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxThunk","store","createStore","reducers","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7a5d7c57.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Card, Carousel } from 'react-bootstrap';\r\n\r\nclass ChatCard extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tclassName='message-recived message'\r\n\t\t\t\tstyle={{ width: '18rem', height: '400px' }}>\r\n\t\t\t\t<Carousel controls={false}>\r\n\t\t\t\t\t{this.props.cardList.map((card, index) => (\r\n\t\t\t\t\t\t<Carousel.Item key={index}>\r\n\t\t\t\t\t\t\t{card.cardImg ? (\r\n\t\t\t\t\t\t\t\t<Card.Img\r\n\t\t\t\t\t\t\t\t\tvariant='top'\r\n\t\t\t\t\t\t\t\t\tsrc={card.cardImg}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t<Card.Body style={{ margin: '0 0 25px 0', heigth: '100px' }}>\r\n\t\t\t\t\t\t\t\t<Card.Title style={{ fontSize: '1rem' }}>\r\n\t\t\t\t\t\t\t\t\t{card.cardTitle}\r\n\t\t\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Text style={{ fontSize: '.60rem' }}>\r\n\t\t\t\t\t\t\t\t\t{card.cardText}\r\n\t\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t\t{card.cardUrl ? (\r\n\t\t\t\t\t\t\t\t\t<Button href={card.cardUrl} className='yellow-button-card'>\r\n\t\t\t\t\t\t\t\t\t\t{card.cardButton}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Carousel>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nChatCard.propTypes = {\r\n\tcardList: PropTypes.array,\r\n};\r\n\r\nexport default ChatCard;\r\n","import { SEND_MESSAGE_REQUEST, SEND_MESSAGE_SUCCESS, CLEAN_CHAT } from './types';\r\nimport answers from '../answers.json';\r\n\r\nfunction sayHello(dispatch) {\r\n\tconst answer = [];\r\n\tanswer.push(answers.find((answer) => answer.id === 0));\r\n\tanswer.push(answers.find((answer) => answer.id === 1));\r\n\tdispatch({ type: SEND_MESSAGE_SUCCESS, payload: answer });\r\n}\r\n\r\nexport const cleanChat = () => (dispatch) => {\r\n\tdispatch({ type: CLEAN_CHAT });\r\n};\r\n\r\nexport const sendMessage = (message) => (dispatch) => {\r\n\tdispatch({ type: SEND_MESSAGE_REQUEST, payload: message });\r\n\r\n\tif (message.toUpperCase().indexOf('HOLA') !== -1) {\r\n\t\tsayHello(dispatch);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (message.toUpperCase().indexOf('NOTICIA') !== -1) {\r\n\t\tconst answer = [];\r\n\t\tanswer.push(answers.find((answer) => answer.id === 11));\r\n\t\tanswer.push(answers.find((answer) => answer.id === 12));\r\n\t\tdispatch({ type: SEND_MESSAGE_SUCCESS, payload: answer });\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst rand = Math.floor(Math.random() * 10 + 2);\r\n\tconst answer = [answers.find((answer) => answer.id === rand)];\r\n\tdispatch({ type: SEND_MESSAGE_SUCCESS, payload: answer });\r\n};\r\n\r\nexport const initialMessages = () => (dispatch) => {\r\n\tsayHello(dispatch);\r\n};\r\n","export const SEND_MESSAGE_REQUEST = 'send_message';\r\nexport const SEND_MESSAGE_SUCCESS = 'send_message_success';\r\nexport const CLEAN_CHAT = 'clean_chat';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Image, Button, Form, Col, Dropdown } from 'react-bootstrap';\r\nimport { FaWindowMinimize, FaBars, FaPaperPlane } from 'react-icons/fa';\r\n\r\nimport ChatCard from './ChatCard';\r\nimport * as actions from '../../actions';\r\n\r\nclass Chat extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { message: '' };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollToBottom();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.scrollToBottom();\r\n\t}\r\n\r\n\tscrollToBottom = () => {\r\n\t\tthis.messagesEnd.scrollIntoView();\r\n\t};\r\n\r\n\tonChangeHandler = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\tconst value = event.target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\r\n\tsendMessage = (e, message) => {\r\n\t\tif (message !== '') {\r\n\t\t\tthis.props.sendMessage(message);\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tmessage: '',\r\n\t\t});\r\n\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst imageSrc = '/ro-avatar.png';\r\n\t\tconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n\t\t\t<a\r\n\t\t\t\tclassName='white'\r\n\t\t\t\thref=''\r\n\t\t\t\tref={ref}\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tonClick(e);\r\n\t\t\t\t}}>\r\n\t\t\t\t{children}\r\n\t\t\t</a>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className='chat-container'>\r\n\t\t\t\t<Navbar className='header-container' sticky='top' variant='dark'>\r\n\t\t\t\t\t<Navbar.Brand\r\n\t\t\t\t\t\tonClick={() => this.props.chatVisibilityHandler()}\r\n\t\t\t\t\t\thref='#'>\r\n\t\t\t\t\t\t<FaWindowMinimize className='align-bottom' />\r\n\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tclassName='header-image'\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tsrc={window.location.origin + imageSrc}\r\n\t\t\t\t\t\t\talt={imageSrc}\r\n\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t<label className='align-bottom'>Ro</label>\r\n\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t<Navbar.Collapse className='justify-content-end'>\r\n\t\t\t\t\t\t<Dropdown alignRight={true}>\r\n\t\t\t\t\t\t\t<Dropdown.Toggle as={CustomToggle}>\r\n\t\t\t\t\t\t\t\t<FaBars style={{ height: '2em', width: '2em' }} />,\r\n\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={() => this.props.cleanChat()}>\r\n\t\t\t\t\t\t\t\t\tLimpiar conversación\r\n\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Navbar>\r\n\t\t\t\t<div className='messages-container'>\r\n\t\t\t\t\t{this.props.bot.messages.map((message, index) =>\r\n\t\t\t\t\t\tmessage.isCard ? (\r\n\t\t\t\t\t\t\t<ChatCard key={index} cardList={message.cardList}></ChatCard>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\tmessage.sender\r\n\t\t\t\t\t\t\t\t\t\t? 'message-sent message'\r\n\t\t\t\t\t\t\t\t\t\t: 'message-recived message'\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t<div className='conversation-message'>{message.text}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{ float: 'left', clear: 'both' }}\r\n\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\tthis.messagesEnd = el;\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='footer-container'>\r\n\t\t\t\t\t<div className='recomendations-container'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName='yellow-button'\r\n\t\t\t\t\t\t\tvariant='outline-primary'\r\n\t\t\t\t\t\t\tonClick={(e) => this.sendMessage(e, 'Hola')}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\tHola\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName='yellow-button'\r\n\t\t\t\t\t\t\tvariant='outline-primary'\r\n\t\t\t\t\t\t\tonClick={(e) => this.sendMessage(e, 'Noticias')}>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\tNoticias\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form onSubmit={(e) => this.sendMessage(e, this.state.message)}>\r\n\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t<Col style={{ padding: '0px 0px 0px 5px' }} xs='10'>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\tclassName='form-input'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Escribe un mensaje...'\r\n\t\t\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.message}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onChangeHandler}\r\n\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col style={{ padding: '0px' }} xs='2'>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref='#'\r\n\t\t\t\t\t\t\t\t\tclassName='send-button'\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.sendMessage(e, this.state.message)}>\r\n\t\t\t\t\t\t\t\t\t<FaPaperPlane />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nChat.propTypes = {\r\n\tbot: PropTypes.object,\r\n\tchatVisibilityHandler: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { bot: state.messages };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Chat);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Navbar, Image } from 'react-bootstrap';\n\nimport Chat from './ro/Chat';\nimport * as actions from '../actions';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isChatHidden: true, chatClicked: false };\n\n\t\tthis.chatVisibilityHandler = this.chatVisibilityHandler.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initialMessages();\n\t}\n\n\tchatVisibilityHandler() {\n\t\tthis.setState({\n\t\t\tisChatHidden: !this.state.isChatHidden,\n\t\t\tchatClicked: true,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst imageSrc = '/ro-avatar.png';\n\t\tconst chat = this.state.isChatHidden ? (\n\t\t\t<div className='mini'>\n\t\t\t\t{this.state.chatClicked ? null : (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref='#'\n\t\t\t\t\t\tclassName='presentation-text'\n\t\t\t\t\t\tonClick={() => this.chatVisibilityHandler()}>\n\t\t\t\t\t\t<div className='message-sent message'>\n\t\t\t\t\t\t\t<div className='conversation-message'>\n\t\t\t\t\t\t\t\tHOLA, SOY RO, ¿NECESITAS AYUDA?\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\n\t\t\t\t<a href='#' onClick={() => this.chatVisibilityHandler()}>\n\t\t\t\t\t<Image fluid src={window.location.origin + imageSrc} alt={imageSrc} />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<Chat chatVisibilityHandler={this.chatVisibilityHandler}></Chat>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<header className='App-header'></header>\n\t\t\t\t<Navbar className='header-container' sticky='top' variant='dark'>\n\t\t\t\t\t<Navbar.Brand>Ro The Bot</Navbar.Brand>\n\t\t\t\t</Navbar>\n\t\t\t\t{chat}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nApp.propTypes = {\n\tbot: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => {\n\treturn { bot: state.messages };\n};\n\nexport default connect(mapStateToProps, actions)(App);\n","import {\r\n\tSEND_MESSAGE_REQUEST,\r\n\tSEND_MESSAGE_SUCCESS,\r\n\tCLEAN_CHAT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\tmessages: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MESSAGE_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [\r\n\t\t\t\t\t...state.messages,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: action.payload,\r\n\t\t\t\t\t\tsender: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase SEND_MESSAGE_SUCCESS:\r\n\t\t\ttry {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tmessages: [...state.messages, ...action.payload],\r\n\t\t\t\t};\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase CLEAN_CHAT:\r\n\t\t\ttry {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tmessages: [],\r\n\t\t\t\t};\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport botReducer from './botReducer';\r\n\r\nexport default combineReducers({\r\n\tmessages: botReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './ro.css';\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers =\n\ttypeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n\t\t: compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(reduxThunk));\nconst store = createStore(reducers, {}, enhancer);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}